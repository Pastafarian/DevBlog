# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- develop

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: Build
  displayName: Build from source
  jobs:
  - job: BuildFromSource
    displayName: BuildFromSource
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
       packageType: 'sdk'
       version: '7.0.x'
       includePreviewVersions: true
    - task: NuGetToolInstaller@1
    - task: NuGetCommand@2
      displayName: Restore solution
      inputs:
        restoreSolution: '$(solution)'
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: '**/*.sln'
        arguments: '--configuration $(buildConfiguration)'
    - task: DotNetCoreCLI@2
      displayName: 'dotnet test'
      inputs:
        command: 'test'
        projects: '**/*Tests.csproj'
        arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'
        testRunTitle: 'Tests'
    - task: Docker@2
      displayName: Build and push Api image
      inputs:
        command: buildAndPush
        containerRegistry: dockerhub
        repository: stephenadam/devblog_api
        dockerfile: 'server/dockerfile'
        tags: |
          $(tag)

    - task: Docker@2
      displayName: Build and push Angular app image
      inputs:
        command: buildAndPush
        containerRegistry: dockerhub
        repository: stephenadam/devblog_web
        dockerfile: 'client/Dockerfile'
        tags: |
          $(tag)

  - deployment: VMDeploy
    dependsOn: BuildFromSource
    displayName: Deploy to VM
    environment: 
      name: Heztner
      resourceType: virtualMachine
    strategy:
      runOnce:
          deploy:   
            steps:
              - bash: docker pull stephenadam/devblog_api:$(tag)
              - bash: docker pull stephenadam/devblog_web:$(tag)
              - bash: export tag=$(tag)
                displayName: Set tag environment variable
              - bash: docker-compose down
              - bash: docker-compose up -d
